apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tardis.fullname" . }}-celery-worker
  labels:
    {{- include "tardis.labels" . | nindent 4 }}
spec:
  {{- if not .Values.celery.worker.autoscaling.enabled }}
  replicas: {{ .Values.celery.worker.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tardis.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | quote }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum | quote }}
        {{- with .Values.celery.worker.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tardis.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tardis.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-celery-worker
          args: ['celery','worker','--loglevel',{{ .Values.celery.worker.loglevel | upper | quote }}]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #ports:
          #  - name: celery
          #    containerPort: 6666
          #    protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /login
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /login
          #    port: http
          resources:
            {{- toYaml .Values.celery.worker.resources | nindent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.settings.file_store.path | quote }}
              name: files-store
            - mountPath: {{ .Values.settings.default.receiving_dir.path | quote }}
              name: receive
            - mountPath: "/app/tardis/settings.py"
              name: settings-py
              readOnly: true
              subPath: settings.py
            - mountPath: "/app/tardis/secrets"
              name: secrets
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: "files-store"
          persistentVolumeClaim:
            claimName: {{ include "tardis.fullname" . }}-files-store
        - name: "receive"
          persistentVolumeClaim:
            claimName: {{ include "tardis.fullname" . }}-receive
        - name: "settings-py"
          configMap:
            name: {{ include "tardis.fullname" . }}
            items:
              - key: "settings.py"
                path: "settings.py"
        - name: "secrets"
          secret:
            secretName: {{ include "tardis.fullname" . }}
