apiVersion: v1
kind: Secret
metadata:
  name: {{ include "tardis.fullname" . }}
  labels:
    {{- include "tardis.labels" . | nindent 4 }}
type: Opaque
stringData:
  __init__.py: |
    from .settings import *
    from .broker import *
    from .postgresql import *
    {{ if .Values.settings.ldap }}from .ldap import *{{ end }}
  {{- range $provider,$p := .Values.settings.auth }}
    from .auth_{{ $provider }} import *
  {{- end }}
  settings.py: |
    SECRET_KEY = {{ .Values.settings.secret_key | quote }}
  {{- with .Values.settings.rabbitmq }}
  broker.py: |
    BROKER_URL = 'amqp://%(user)s:%(password)s@%(host)s:%(port)s%(vhost)s' % {
        'host': {{ include "tardis.rabbitmq.host" $ | quote }},
        'port': {{ default .port $.Values.global.rabbitmq.port }},
        'user': {{ default .user $.Values.global.rabbitmq.user | quote }},
        'password': {{ default .password $.Values.global.rabbitmq.password | quote }},
        'vhost': {{ default .vhost $.Values.global.rabbitmq.vhost | quote }}
    }
  {{- end }}
  postgresql.py: |
    DATABASES = {
        'default': {
          {{- with .Values.settings.postgresql }}
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'HOST': {{ include "tardis.postgresql.host" $ | quote }},
            'PORT': {{ include "tardis.postgresql.port" $ }},
            'USER': {{ .postgresqlUsername | default $.Values.global.postgresql.postgresqlUsername | quote }},
            'PASSWORD': {{ .postgresqlPassword | default $.Values.global.postgresql.postgresqlPassword | quote }},
            'NAME': {{ .postgresqlDatabase | default $.Values.global.postgresql.postgresqlDatabase | quote }},
            'DISABLE_SERVER_SIDE_CURSORS': True,
            'CONN_MAX_AGE': {{ .conn_max_age }}
          {{- end }}
        }
    }
  {{- if .Values.settings.ldap }}
  {{- with .Values.settings.ldap }}
  ldap.py: |
    LDAP_USE_TLS = {{ if .tls }}True{{ else }}False{{ end }}
    LDAP_URL = {{ .url | quote }}
    LDAP_USER_LOGIN_ATTR = {{ .user_login_attr | quote }}
    LDAP_USER_ATTR_MAP = {
      {{- range $key,$value := .user_attr_map }}
        {{ $key | quote }}: {{ $value | quote }},
      {{- end }}
    }
    LDAP_GROUP_ID_ATTR = {{ .group_id_attr | quote }}
    LDAP_GROUP_ATTR_MAP = {
      {{- range $key,$value := .group_attr_map }}
        {{ $key | quote }}: {{ $value | quote }},
      {{- end }}
    }
    LDAP_ADMIN_USER = {{ .admin_user | quote }}
    LDAP_ADMIN_PASSWORD = {{ .admin_password | quote }}
    LDAP_BASE = {{ .base | quote }}
    LDAP_USER_BASE = {{ .user_base | quote }}
    LDAP_GROUP_BASE = {{ .group_base | quote }}
  {{- end }}
  {{- end }}
{{- range $provider,$p := .Values.settings.auth }}
  auth_{{ $provider }}.py: |
    SOCIAL_AUTH_{{ $provider | upper }}_KEY = {{ $p.key | quote }}
    SOCIAL_AUTH_{{ $provider | upper }}_SECRET = {{ $p.secret | quote }}
    {{ if $p.authUrl }}SOCIAL_AUTH_{{ $provider | upper }}_AUTH_URL = {{ $p.authUrl | quote }}{{ end }}
    {{ if $p.tokenUrl }}SOCIAL_AUTH_{{ $provider | upper }}_TOKEN_URL = {{ $p.tokenUrl | quote }}{{ end }}
    {{ if $p.userInfoUrl }}SOCIAL_AUTH_{{ $provider | upper }}_USER_INFO_URL = {{ $p.userInfoUrl | quote }}{{ end }}
{{- end }}
