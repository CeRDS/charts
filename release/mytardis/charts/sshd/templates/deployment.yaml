apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sshd.fullname" . }}
  labels:
    {{- include "sshd.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "sshd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | quote }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sshd.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sshd.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.debug }}
          args: ['sshd','-d']
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ssh
              containerPort: 2222
              protocol: TCP
          #livenessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          #readinessProbe:
          #  httpGet:
          #    path: /
          #    port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: "/etc/ssh/sshd_config"
              name: "sshd-config"
              readOnly: true
              subPath: "sshd_config"
            - mountPath: "/etc/passwd"
              name: "passwd"
              readOnly: true
              subPath: "passwd"
            {{- if or .Values.hostKeys .Values.hostKeysSecret }}
            - mountPath: "/etc/ssh/ssh-host-keys"
              name: "ssh-host-keys"
              readOnly: true
            {{- end }}
            {{- range $volno,$vol := .Values.volumes }}
            - mountPath: {{ $vol.mountPath }}
              name: volume-{{ $volno }}
            {{- end }}
            {{- range $username,$user := .Values.users }}
            - mountPath: {{ printf "%s/.ssh/authorized_keys" $user.home | quote }}
              name: user-{{ $username }}
              readOnly: true
              subPath: "authorized_keys"
            {{- end }}
      {{- if .Values.users }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          command: [ "/bin/bash","-c" ]
          args:
            -
              /usr/local/bin/mkhomedir.sh {{ range $username,$user := .Values.users }}{{ $username }}{{ end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - mountPath: "/etc/passwd"
              name: passwd
              readOnly: true
              subPath: passwd
            - mountPath: /home
              name: home
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - configMap:
            name: {{ include "sshd.fullname" . }}
            items:
              - key: "sshd_config"
                path: "sshd_config"
          name: "sshd-config"
        - configMap:
            name: {{ include "sshd.fullname" . }}-passwd
            items:
              - key: "passwd"
                path: "passwd"
          name: "passwd"
        {{- if or .Values.hostKeys .Values.hostKeysSecret }}
        - name: "ssh-host-keys"
          secret:
            defaultMode: 0400
            secretName: {{ .Values.hostKeysSecret | default (printf "%s-%s" (include "sshd.fullname" .) "host-keys") | quote }}
        {{- end }}
        {{- range $volno,$vol := .Values.volumes }}
        - name: volume-{{ $volno }}
          persistentVolumeClaim:
            claimName: {{ $vol.persistentVolumeClaim }}
        {{- end }} 
        - emptyDir: {}
          name: home
        {{- range $username,$user := .Values.users }}
        - configMap:
            name: {{ include "sshd.fullname" $ }}-user-{{ $username }}
            items:
              - key: "authorized_keys"
                path: "authorized_keys"
          name: user-{{ $username }}
        {{- end }}
